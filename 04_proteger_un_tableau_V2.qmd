# Protéger un tableau - 2nde partie

Rafraîchissez votre session R en faisant `ctrl+shift+F10`.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(dir.root = getwd())
```

## Objectif:

Protéger un tableau contenant une ou plusieurs variables hiérarchiques
en appelant Tau-Argus depuis R pour poser le secret secondaire.

## Consignes:

Vous utiliserez les règles en vigueur à l'Insee pour la diffusion des
tableaux issus des enquêtes entreprises.


Poser un masque de secret sur un tableau comprend les étapes suivantes:  

1. Il s'agit dans un premier temps de poser le secret primaire. Pour cela, il 
s'agit de créer des variables indicatrices, comme dans l'exercice 1:  

  1.1 Pour chacun des tableaux, vous ajouterez une variable booléenne
    indiquant si la cellule est problématique (`TRUE`) ou non (`FALSE`),
    au regard de chacune des règles pertinentes à appliquer:
    
    -   Si vous appliquez la règle de fréquence, la variable créée
    s'appellera `is_secret_freq`;
    -   Si vous appliquez la règle de dominance, la variable créée
    s'appellera `is_secret_dom`.
  1.2 Puis de créer une variable qu'on appellera `is_secret_prim`, définie ainsi:
    -  `is_secret_prim = is_secret_freq` si seule la règle de fréquence doit
    s'appliquer;
    -  `is_secret_prim = is_secret_freq | is_secret_dom` si les deux règles doivent
    s'appliquer;

2.  Après avoir posé le secret primaire, vous calculerez le nombre de cellules
    détectées comme à risque.
    
3. Ensuite, il s'agit de poser le secret secondaire en utilisant le package `rtauargus`. Les consignes d'installation de `rtauargus` et du logiciel Tau-Argus sont indiquées dans le fichier [R/00_installations.Rmd](R/00_installations.Rmd).

Vous utiliserez notamment la fonction `tab_rtauargus()` et 
suivrez les étapes mentionnées pour apprendre à l'utiliser.

4. Enfin, vous calculerez le nombre de cellules selon leur statut final. Nous 
utiliserons pour cela la norme européenne en notant:  

- `A` les cellules en secret primaire à cause de la règle de fréquence
- `B` les cellules en secret primaire à cause de la règle de dominance (dans le futur ces cellules pourraient être notées `O`)
- `D` les cellules concernées par le secret secondaire
- `V` les cellules non touchées par le secret, cad les cellules qui pourront être 
diffusées.


## Contexte

Tous les tableaux fournis ont une structure identique dont l'utilité
sera expliquée plus tard. En plus des variables décrivant les
croisements (variables catégorielles) placées en début, suivent:

-   `FREQ` la variable indiquant le nombre d'unités statistiques
    (entreprises en général dans nos exemples) contribuant à la cellule;
-   `VALUE` la variable indiquant la somme pondérée des valeurs de
    l'ensemble des contributeurs à la cellule (Cela peut être un chiffre
    d'affaires, un nombre de personnes en emploi au 31/12, etc.);
-   `MAX` la valeur du plus gros contributeur à la cellule.

`MAX` et `VALUE` sont nécessairement dans la même unité. Si `VALUE` et
`FREQ` sont identiques, vous êtes en présence d'un tableau d'effectifs.
Dans ce cas, la colonne `MAX` n'a aucune utilité.

## Packages et données

```{r packages}
library(dplyr)
library(rtauargus)
```


```{r data}
load(file="data/data_pour_exo4.RData")
```

## Localisation de Tau-Argus

Si vous êtes sur AUS

```{r loc-tau}
loc_tauargus <- "Y:/Logiciels/TauArgus/TauArgus4.2.3/TauArgus.exe"
options(rtauargus.tauargus_exe = loc_tauargus)
```

Sinon, modifier le chemin ci-dessous:

```{r eval=FALSE}
loc_tauargus <- "C:/Users/tmm7an/Documents/SDC/TauArgus/TauArgus4.2.3/TauArgus.exe"
options(rtauargus.tauargus_exe = loc_tauargus)
```


## Un exemple

Ici, nous chercherons à protéger le tableau déjà évoqué dans le diaporama de la formation et dans [Exos/03_hierarchies.Rmd](Exos/03_hierarchies.Rmd). 

```{r}
T0 <- data.frame(
  geo = c("Pays","Nord","Ouest","Est","Sud",paste0("N",1:3),paste0("O",1:4),paste0("E",1:3), paste0("S",1:2)),
  freq = c(400, 46, 191, 80, 83, 21, 2, 23, 32, 54, 67, 38, 27, 41, 12, 44, 39)
)
```

La variable `geo` est hiérarchique (Pays = Nord + Ouest + Est + Sud, par exemple) 
et nous avons construit le fichier argus adéquat : [hrc/pays_TA.hrc](hrc/pays_TA.hrc).

Nous pouvons dès lors poser le masque de secret sur ce tableau. 

Pour cela, nous faisons toujours appel à la fonction `tab_rtauargus`, 
telle que présentée dans [Exos/02_proteger_un_tableau_V1.Rmd](Exos/02_proteger_un_tableau_V1.Rmd).

1. Première étape: poser le secret primaire

```{r}
T0_detect <- T0 %>% 
  mutate(
      is_secret_freq = freq > 0 & freq < 3
    )
```

2. Seconde étape: lancer Tau-Argus pour poser le secret secondaire

Pour que l'information hiérarchique soit bien prise en compte lors de la pose du
secret secondaire par Tau-Argus, il suffit de renseigner l'argument `hrc = ` 
sous la forme d'un vecteur nommé `c(var1 = fichier1, var2 = fichier2,...)`:
le nom de chaque élément étant le nom de la variable concernée et la valeur étant 
la localisation du fichier `.hrc` correspondant.

```{r}
T0_masq <- tab_rtauargus(
  T0_detect,
  dir_name = "tauargus_files/exo4",
  files_name = "T0",
  explanatory_vars = "geo",
  hrc = c(geo = "hrc/pays_TA.hrc"), ###
  secret_var = "is_secret_freq",
  value = "freq",
  freq = "freq",
  totcode = c(geo="Pays"),
  verbose = FALSE
)
```

```{r}
T0_masq %>% count(Status)
```

On peut vérifier que le secret a été posé correctement : 
```{r}
T0_masq
```

En effet, le SP étant en N2, le SSD est posé en N1, respectant ainsi la hiérarchie.
En ne prenant pas en compte l'information hiérarchique (ci-dessous), le secret secondaire est
posé en E3, pour minimiser les valeurs supprimées.

```{r}
T0_masq_sans_hrc <- tab_rtauargus(
  T0_detect,
  dir_name = "tauargus_files/exo4",
  files_name = "T0",
  explanatory_vars = "geo",
  # hrc = c(geo = "hrc/pays_TA.hrc"),
  secret_var = "is_secret_freq",
  value = "freq",
  freq = "freq",
  totcode = c(geo="Pays"),
  verbose = FALSE
)
```

```{r}
T0_masq_sans_hrc
```

## A vous de jouer

Protéger chacun des tableaux mentionnés ci-dessous contre les risques de divulgation 
en utilisant la fonction `tab_rtauargus`.


### Traiter le tableau `T1`

1. Le tableau `T1` fournit le CA dans la production de pizzas des entreprises 
françaises, ventilé par secteur d'activité `ACT` et taille des entreprises `SIZE`. 
Le total est noté "Ensemble" pour les deux variables.  

Les secteurs d'activité correspondent au niveau A10, A21 et A88 de la NAF. Une table 
de correspondance entre ces trois niveaux décrit cet emboîtement: `activity_corr_table`.


1.1 Préparer le fichier argus `.hrc` décrivant adéquatement l'emboîtement de la 
variable `ACT`


```{r}
act_hrc_file <- write_hrc2(activity_corr_table, file_name = "hrc/activity.hrc")
```


1.2 Poser le secret primaire sur `T1`

```{r}
str(T1)
```


```{r}
T1_detect <- T1 %>%
  mutate(
    is_secret_freq = FREQ > 0 & FREQ < 3,
    is_secret_dom = (VALUE != 0) & (MAX > 0.85*VALUE)
  ) %>% 
  mutate(
    is_secret_prim = is_secret_freq | is_secret_dom
  )
```

1.3 Calculer la quantité ce cellules à risque

```{r}
T1_detect %>% count(is_secret_prim)
```

1.4 Poser le secret secondaire


```{r}
T1_masq <- tab_rtauargus(
  T1_detect,
  dir_name = "tauargus_files/exo4",
  files_name = "T1",
  explanatory_vars = c("ACT","SIZE"),
  hrc = c(ACT = act_hrc_file),
  secret_var = "is_secret_prim",
  value = "VALUE",
  freq = "FREQ",
  totcode = c(ACT="Ensemble", SIZE="Ensemble"),
  verbose = FALSE
) %>% 
  mutate(
    statut_final = case_when(
      is_secret_freq ~ "A",
      is_secret_dom ~ "B",
      TRUE ~ Status,
    )
  )
```


1.5 Bilan du secret posé

```{r}
T1_masq  %>% 
  group_by(statut_final) %>% 
  summarise(
    n_cell = n(),
    val_cell = sum(VALUE)
  ) %>%
  mutate(
    pc_n_cell = n_cell/sum(n_cell)*100,
    pc_val_cell = val_cell/sum(val_cell)*100
  )
```

### Traiter le tableau `T4`

2. Le tableau `T4` fournit le CA dans la production de batavias des entreprises 
françaises de trois (anciennes) régions de l'Est de la France, ventilé par secteur 
d'activité `ACTIVITY`, par localisation géographique `NUTS` et taille des entreprises `SIZE`.  
Le total est noté "Ensemble" pour les variables `ACTIVITY` et `SIZE`, et "EST" pour la 
variable `NUTS`.  

Les secteurs d'activité correspondent au niveau A10, A21 et A88 de la NAF. Une table 
de correspondance entre ces trois niveaux décrit cet emboîtement: `activity_corr_table`.

La géographie mentionnée correspond à l'emboîtement régions > départements pour les trois 
régions sélectionnées (FR41, FR42 et FR43). La table de correspondance 
`nuts23_fr_corr_table` décrit les emboîtements pour toute la France métropolitaine.

2.1 Préparer le fichier argus `.hrc` décrivant adéquatement l'emboîtement de la 
variable `ACT`


```{r}
act_hrc_file <- write_hrc2(activity_corr_table, file_name = "hrc/activity.hrc")
```

2.2 Préparer le fichier argus `.hrc` décrivant adéquatement l'emboîtement de la 
variable `NUTS`


```{r}
nuts_hrc_file <- nuts23_fr_corr_table %>% 
  filter(NUTS2 %in% c("FR41","FR42","FR43")) %>% 
  write_hrc2(file_name = "hrc/nuts23_est.hrc")
```


2.2 Poser le secret primaire sur `T4`

```{r}
str(T4)
```


```{r}
T4_detect <- T4 %>%
  mutate(
    is_secret_freq = FREQ > 0 & FREQ < 3,
    is_secret_dom = (VALUE != 0) & (MAX > 0.85*VALUE)
  ) %>% 
  mutate(
    is_secret_prim = is_secret_freq | is_secret_dom
  )
```

2.3 Calculer la quantité ce cellules à risque

```{r}
T4_detect %>% count(is_secret_prim)
```

2.4 Poser le secret secondaire

Le nombre de cellules en SP étant assez important, la pose du secret secondaire 
prend quelques dizaines de secondes.

```{r}
T4_masq <- tab_rtauargus(
  T4_detect,
  dir_name = "tauargus_files/exo4",
  files_name = "T4",
  explanatory_vars = c("ACTIVITY", "NUTS", "SIZE"),
  hrc = list(ACTIVITY = act_hrc_file, NUTS = nuts_hrc_file),
  secret_var = "is_secret_prim",
  value = "VALUE",
  freq = "FREQ",
  maxscore = "MAX",
  totcode = c(ACTIVITY="Ensemble", NUTS="EST", SIZE="Ensemble"),
  verbose = FALSE
) %>% 
  mutate(
    statut_final = case_when(
      is_secret_freq ~ "A",
      is_secret_dom ~ "B",
      TRUE ~ Status,
    )
  )
```


2.5 Bilan du secret posé

```{r}
T4_masq %>% 
  group_by(statut_final) %>% 
  summarise(
    n_cell = n(),
    val_cell = sum(VALUE)
  ) %>%
  mutate(
    pc_n_cell = n_cell/sum(n_cell)*100,
    pc_val_cell = val_cell/sum(val_cell)*100
  )
```


## Exercice Bonus

3. Le tableau `T2` fournit le CA dans la production de pizzas des entreprises 
françaises, ventilé par ancienne région (NUTS2) et taille des entreprises `SIZE`. 
Le total est noté "Ensemble" pour SIZE et "FR" pour les régions.  

Le tableau `T3` fournit le CA dans la production de pizzas des entreprises 
françaises, ventilé par département (NUTS3) et taille des entreprises `SIZE`. 
Le total est noté "Ensemble" pour SIZE et "FR" pour `NUTS3`.

Protéger ces deux tableaux.



